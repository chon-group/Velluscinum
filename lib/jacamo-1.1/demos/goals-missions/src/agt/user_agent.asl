{ include("$jacamoJar/templates/common-cartago.asl") }

// these agents are not controlled by common-moise plans
// but by a GUI
// { include("$jacamoJar/templates/common-moise.asl") }

/* Initial beliefs and rules */

/* Initial goals */
!setup.

// Initialisation Plans

+!setup
    <-  .wait(300);
        .my_name(Me);
        .concat("group_console_",Me,GCN);
        makeArtifact(GCN,"easss.step.GroupConsole",[Me],GCId);
        .println("Did a group-console with Id ", GCId);
        focus(GCId);
        .concat("scheme_console_",Me,SCN);
        makeArtifact(SCN,"easss.step.SchemeConsole",[Me],SCId);
        .println("Did a scheme-console with Id ", SCId);
        focus(SCId);
        joinRemoteWorkspace("org","localhost",WspID2);
        println("ready");
        .

// Reactive plans for events generated by the group management console (decisions of my user)
+cmd("adoptRole",Group,Role)
    <-  .println("Going to adopt ",Role," in ",Group);
        lookupArtifact(Group,GroupId);
        adoptRole(Role)[artifact_id(GroupId)];
        .println("Role adopted").


+cmd("leaveRole",Group,Role)
    <-  .println("Going to leave ",Role," in ",Group);
        lookupArtifact(Group,GroupId);
        leaveRole(Role)[artifact_id(GroupId)];
        .println("Role left").

+cmd("addScheme",Group,Scheme)
    <-  .println("Going to add scheme ",Scheme," in ",Group);
        lookupArtifact(Group,GroupId);
        addScheme(Scheme)[artifact_id(GroupId)];
        .println("Scheme added").

+cmd("removeScheme",Group,Scheme)
    <-  .println("Going to remove scheme ",Scheme," from ",Group);
        lookupArtifact(Group,GroupId);
        removeScheme(Scheme)[artifact_id(GroupId)];
        .println("Scheme removed").

// Reactive plans for events generated by the scheme management console (decisions of my user)
+cmd("commitMission",Scheme,Mission)
    <-  .println("Going to commit ",Mission," in ",Scheme);
        lookupArtifact(Scheme,SchemeId);
        commitMission(Mission)[artifact_id(SchemeId)];
        .println("Committed to mission").

+cmd("leaveMission",Scheme,Mission)
    <-  .println("Going to leave ",Mission," in ",Scheme);
        lookupArtifact(Scheme,SchemeId);
        leaveMission(Mission)[artifact_id(SchemeId)];
        .println("Mission left.").

+cmd("goalAchieved",Scheme,Goal)
    <-  .println("Goal ", Goal, " has been achieved in ",Scheme);
        lookupArtifact(Scheme,SchemeId);
        goalAchieved(Goal)[artifact_id(SchemeId)];
        .println("Goal achieved").
